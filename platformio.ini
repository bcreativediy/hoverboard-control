; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


[platformio]
default_envs = odroid_esp32
;default_envs = featheresp32_ESPSLAVE
;default_envs = TTGO_ESPMASTER
;default_envs = TTGO_ESPMASTER_PADDELEC
;default_envs = nodemcu-32s_WIFI
;default_envs = nodemcu-32s_ESPSLAVE
;default_envs = nodemcu-32s_ESPPROTOCOL
;default_envs = featheresp32_relay
;default_envs = nodemcu-woodenboard
;default_envs = nodemcu-testrun
;default_envs = featheresp32_remote


[env:odroid_esp32]
;board = odroid_esp32
board = esp-wrover-kit
debug_tool = ftdi
platform = espressif32
framework = arduino
lib_ldf_mode=deep
lib_deps = WiFiClientSecure, 5688, U8g2, I2Cdevlib-MPU6050
;board_build.partitions = min_spiffs.csv
monitor_speed = 115200
;upload_port = /dev/ttyUSB0
build_flags =
    -I include
    -I src/hoverboardAPI/src
    -I src/hoverboardAPI/src/hbprotocol

; Serial Ports
    -D NUM_COM=3                ; total number of COM Ports
    -D DEBUG_COM=0              ; debug output
    -D UART_BAUD0=115200        ; Baudrate UART0
    -D        SERIAL0_RXPIN=03  ; receive Pin UART0
    -D        SERIAL0_TXPIN=01  ; transmit Pin UART0
    -D UART_BAUD1=9600          ; Baudrate UART1
    -D        SERIAL1_RXPIN=15  ; receive Pin UART1
    -D        SERIAL1_TXPIN=02  ; transmit Pin UART1
    -D MOTOR_COM=2              ; motor control output
    -D UART_BAUD2=9600          ; Baudrate UART2
    -D        SERIAL2_RXPIN=16  ; receive Pin UART2
    -D        SERIAL2_TXPIN=17  ; transmit Pin UART2
    -D       SERIAL2_GNDPIN=19  ; GND reference for UART

; Nunchuk
;    -D INPUT_NUNCHUK
;    -D      NUNCHUK_VCCPIN=18
;    -D      NUNCHUK_GNDPIN=19

; Platooning
;    -D INPUT_PLATOONING
;    -D       GAMETRAK1_RPIN=33  ; wire length Pin Gametrak 1      -      white  - Pin 3
;    -D     GAMETRAK1_PHIPIN=35  ; horizontal angle Pin Gametrak 1 - blue/yellow - Pin 2
;    -D   GAMETRAK1_THETAPIN=32  ; vertical angle Pin Gametrak 1   - red/orange  - Pin 4
;    -D   GAMETRAK1_PHI_REV=1    ; Phi is inverted
;    -D GAMETRAK1_THETA_REV=0    ; Theta is inverted
;    -D     GAMETRAK1_VCCPIN=25  ; Pin used to supply Power        - black/brown - Pin 5
;    -D     GAMETRAK1_GNDPIN=26  ; Pin used as GND                 -       green - Pin 1

; IMU
;    -D INPUT_IMU
;    -D INPUT_PADDELECIMU
;    -D IMU_GNDPIN=14
;    -D IMU_VCCPIN=32

; ESPnow
;    -D INPUT_ESPNOW
    -D OUTPUT_ESPNOW
    -D ESPNOW_PREFIX=\"WBOARD\" ; ESPNOW "Channel" encoded in SSID
    -D ESPNOW_PEERMAC=0x24,0x0A,0xC4,0xAF,0xC9,0xE0 ; Woodenboard
;    -D ESPNOW_PEERMAC=0x30,0xAE,0xA4,0x26,0x26,0x14 ; feather board with OLED

; UDP
;    -D INPUT_UDP
;    -D OUTPUT_UDP

; Serial Output
;    -D OUTPUT_PROTOCOL_UART

; Debug
    -D DEBUG_CONSOLE
    -D DEBUG_PING
;    -D DEBUG_OLED
    -D PHAIL_MONITOR
;    -D DEBUG_PLOTTER
;    -D WIFI
;    -D INPUT_TESTRUN
;    -D DEBUG_PROTOCOL_OUTGOING_MARKUP ; Write all outgoing Messages to debug com in human readable form
;    -D DEBUG_PROTOCOL_PASSTHROUGH     ; Connect motor com and debug com, disable usual machine protocol messages. useful when using ascii protocol manually
;    -D DEBUG_PROTOCOL_MEASUREMENTS    ; Write measured values to debug com
;    -D debugESPNOW


[env:featheresp32_ESPSLAVE]
board = featheresp32
platform = espressif32
framework = arduino
lib_deps = U8g2, I2Cdevlib-MPU6050
board_build.partitions = min_spiffs.csv
monitor_speed = 115200
;upload_port = 192.168.4.1
build_flags =
    -I include
    -I src/hoverboardAPI/src
    -I src/hoverboardAPI/src/hbprotocol

; Serial Ports
    -D NUM_COM=3                ; total number of COM Ports
    -D DEBUG_COM=0              ; debug output
    -D UART_BAUD0=115200        ; Baudrate UART0
    -D        SERIAL0_RXPIN=03  ; receive Pin UART0
    -D        SERIAL0_TXPIN=01  ; transmit Pin UART0
    -D UART_BAUD1=9600          ; Baudrate UART1
    -D        SERIAL1_RXPIN=15  ; receive Pin UART1
    -D        SERIAL1_TXPIN=02  ; transmit Pin UART1
    -D MOTOR_COM=2              ; motor control output
    -D UART_BAUD2=9600          ; Baudrate UART2
    -D        SERIAL2_RXPIN=16  ; receive Pin UART2
    -D        SERIAL2_TXPIN=17  ; transmit Pin UART2
    -D       SERIAL2_GNDPIN=19  ; GND reference for UART

; Nunchuk
;    -D INPUT_NUNCHUK
;    -D      NUNCHUK_VCCPIN=18
;    -D      NUNCHUK_GNDPIN=19

; Platooning
;    -D INPUT_PLATOONING
;    -D       GAMETRAK1_RPIN=33  ; wire length Pin Gametrak 1      -      white  - Pin 3
;    -D     GAMETRAK1_PHIPIN=35  ; horizontal angle Pin Gametrak 1 - blue/yellow - Pin 2
;    -D   GAMETRAK1_THETAPIN=32  ; vertical angle Pin Gametrak 1   - red/orange  - Pin 4
;    -D   GAMETRAK1_PHI_REV=1    ; Phi is inverted
;    -D GAMETRAK1_THETA_REV=0    ; Theta is inverted
;    -D     GAMETRAK1_VCCPIN=25  ; Pin used to supply Power        - black/brown - Pin 5
;    -D     GAMETRAK1_GNDPIN=26  ; Pin used as GND                 -       green - Pin 1

; IMU
;    -D INPUT_IMU
;    -D INPUT_PADDELECIMU
;    -D IMU_GNDPIN=14
;    -D IMU_VCCPIN=32

; ESPnow
    -D INPUT_ESPNOW
;    -D OUTPUT_ESPNOW
;    -D ESPNOW_PREFIX=\"TEST1\" ; ESPNOW "Channel" encoded in SSID

; Serial Output
    -D OUTPUT_PROTOCOL_UART

; Debug
;    -D DEBUG_CONSOLE
    -D DEBUG_OLED
;    -D DEBUG_PLOTTER
;    -D WIFI
;    -D INPUT_TESTRUN
;    -D DEBUG_PROTOCOL_OUTGOING_MARKUP ; Write all outgoing Messages to debug com in human readable form
;    -D DEBUG_PROTOCOL_PASSTHROUGH     ; Connect motor com and debug com, disable usual machine protocol messages. useful when using ascii protocol manually
;    -D DEBUG_PROTOCOL_MEASUREMENTS    ; Write measured values to debug com



[env:TTGO_ESPMASTER]
board = esp32dev
platform = espressif32
framework = arduino
lib_deps = U8g2, I2Cdevlib-MPU6050, Plotter
board_build.partitions = min_spiffs.csv
monitor_speed = 115200
;upload_port = 192.168.4.1
build_flags =
    -I include
    -I src/hoverboardAPI/src
    -I src/hoverboardAPI/src/hbprotocol

; Serial Ports
    -D NUM_COM=3                ; total number of COM Ports
    -D DEBUG_COM=0              ; debug output
    -D UART_BAUD0=115200        ; Baudrate UART0
    -D        SERIAL0_RXPIN=03  ; receive Pin UART0
    -D        SERIAL0_TXPIN=01  ; transmit Pin UART0
    -D UART_BAUD1=9600          ; Baudrate UART1
    -D        SERIAL1_RXPIN=15  ; receive Pin UART1
    -D        SERIAL1_TXPIN=02  ; transmit Pin UART1
    -D MOTOR_COM=2              ; motor control output
    -D UART_BAUD2=19200         ; Baudrate UART2
    -D        SERIAL2_RXPIN=16  ; receive Pin UART2
    -D        SERIAL2_TXPIN=17  ; transmit Pin UART2
    -D TTGO

; Nunchuk
;    -D INPUT_NUNCHUK
;    -D      NUNCHUK_VCCPIN=18
;    -D      NUNCHUK_GNDPIN=19

; Platooning
;    -D INPUT_PLATOONING
;    -D       GAMETRAK1_RPIN=33  ; wire length Pin Gametrak 1      -      white  - Pin 3
;    -D     GAMETRAK1_PHIPIN=35  ; horizontal angle Pin Gametrak 1 - blue/yellow - Pin 2
;    -D   GAMETRAK1_THETAPIN=32  ; vertical angle Pin Gametrak 1   - red/orange  - Pin 4
;    -D   GAMETRAK1_PHI_REV=1    ; Phi is inverted
;    -D GAMETRAK1_THETA_REV=0    ; Theta is inverted
;    -D     GAMETRAK1_VCCPIN=25  ; Pin used to supply Power        - black/brown - Pin 5
;    -D     GAMETRAK1_GNDPIN=26  ; Pin used as GND                 -       green - Pin 1

; IMU
    -D INPUT_IMU
;    -D INPUT_PADDELECIMU
    -D             IMU_CPIN=23
    -D             IMU_ZPIN=25

; ESPnow
;    -D INPUT_ESPNOW
    -D OUTPUT_ESPNOW
;    -D ESPNOW_PREFIX=\"TEST1\" ; ESPNOW "Channel" encoded in SSID

; Serial Output
;    -D OUTPUT_PROTOCOL_UART

; Debug
;    -D DEBUG_CONSOLE
    -D DEBUG_OLED
    -D DEBUG_PLOTTER
;    -D WIFI
;    -D INPUT_TESTRUN
;    -D DEBUG_PROTOCOL_OUTGOING_MARKUP ; Write all outgoing Messages to debug com in human readable form
;    -D DEBUG_PROTOCOL_PASSTHROUGH     ; Connect motor com and debug com, disable usual machine protocol messages. useful when using ascii protocol manually
;    -D DEBUG_PROTOCOL_MEASUREMENTS    ; Write measured values to debug com



[env:TTGO_ESPMASTER_PADDELEC]
; TTGO I2C is Pin4 and Pin4
board = esp32dev
platform = espressif32
framework = arduino
lib_deps = U8g2, I2Cdevlib-MPU6050, Plotter
board_build.partitions = min_spiffs.csv
monitor_speed = 115200
;upload_port = 192.168.4.1
build_flags =
    -I include
    -I src/hoverboardAPI/src
    -I src/hoverboardAPI/src/hbprotocol
    -D TTGO

; Serial Ports
    -D NUM_COM=3                ; total number of COM Ports
    -D DEBUG_COM=0              ; debug output
    -D UART_BAUD0=115200        ; Baudrate UART0
    -D        SERIAL0_RXPIN=03  ; receive Pin UART0
    -D        SERIAL0_TXPIN=01  ; transmit Pin UART0
    -D UART_BAUD1=9600          ; Baudrate UART1
    -D        SERIAL1_RXPIN=15  ; receive Pin UART1
    -D        SERIAL1_TXPIN=02  ; transmit Pin UART1
    -D MOTOR_COM=2              ; motor control output
    -D UART_BAUD2=19200         ; Baudrate UART2
    -D        SERIAL2_RXPIN=16  ; receive Pin UART2
    -D        SERIAL2_TXPIN=17  ; transmit Pin UART2

; Nunchuk
    -D INPUT_NUNCHUK
    -D      NUNCHUK_VCCPIN=16
;    -D      NUNCHUK_GNDPIN=
; Platooning
;    -D INPUT_PLATOONING
;    -D       GAMETRAK1_RPIN=33  ; wire length Pin Gametrak 1      -      white  - Pin 3
;    -D     GAMETRAK1_PHIPIN=35  ; horizontal angle Pin Gametrak 1 - blue/yellow - Pin 2
;    -D   GAMETRAK1_THETAPIN=32  ; vertical angle Pin Gametrak 1   - red/orange  - Pin 4
;    -D   GAMETRAK1_PHI_REV=1    ; Phi is inverted
;    -D GAMETRAK1_THETA_REV=0    ; Theta is inverted
;    -D     GAMETRAK1_VCCPIN=25  ; Pin used to supply Power        - black/brown - Pin 5
;    -D     GAMETRAK1_GNDPIN=26  ; Pin used as GND                 -       green - Pin 1

; IMU
    -D INPUT_PADDELECIMU
    -D             IMU_CPIN=23
    -D             IMU_ZPIN=25

; ESPnow
;    -D INPUT_ESPNOW
    -D OUTPUT_ESPNOW
    -DESPNOW_PREFIX=\"PADDELEC\" ; ESPNOW "Channel" encoded in SSID

; Serial Output
;    -D OUTPUT_PROTOCOL_UART

; Debug
;    -D DEBUG_CONSOLE
    -D DEBUG_OLED
;    -D DEBUG_PLOTTER
;    -D WIFI
;    -D INPUT_TESTRUN
;    -D DEBUG_PROTOCOL_OUTGOING_MARKUP ; Write all outgoing Messages to debug com in human readable form
;    -D DEBUG_PROTOCOL_PASSTHROUGH     ; Connect motor com and debug com, disable usual machine protocol messages. useful when using ascii protocol manually
;    -D DEBUG_PROTOCOL_MEASUREMENTS    ; Write measured values to debug com



[env:nodemcu-32s_WIFI]
; 2018-11-12/phail: Tested, this is running on the board
; 2018-11-16/phail: Obsolete now. Only kept to have something which has the WIFI option..
board = nodemcu-32s
platform = espressif32
framework = arduino
lib_deps = U8g2, I2Cdevlib-MPU6050
board_build.partitions = min_spiffs.csv
monitor_speed = 115200
;upload_port = 192.168.4.1
build_flags =
    -I include
    -I src/hoverboardAPI/src
    -I src/hoverboardAPI/src/hbprotocol

; Serial Ports
    -D NUM_COM=3                ; total number of COM Ports
    -D DEBUG_COM=0              ; debug output
    -D UART_BAUD0=115200        ; Baudrate UART0
    -D        SERIAL0_RXPIN=03  ; receive Pin UART0
    -D        SERIAL0_TXPIN=01  ; transmit Pin UART0
    -D UART_BAUD1=9600          ; Baudrate UART1
    -D        SERIAL1_RXPIN=15  ; receive Pin UART1
    -D        SERIAL1_TXPIN=02  ; transmit Pin UART1
    -D MOTOR_COM=2              ; motor control output
    -D UART_BAUD2=19200         ; Baudrate UART2
    -D        SERIAL2_RXPIN=16  ; receive Pin UART2
    -D        SERIAL2_TXPIN=17  ; transmit Pin UART2

; Nunchuk
    -D INPUT_NUNCHUK
    -D      NUNCHUK_VCCPIN=18
    -D      NUNCHUK_GNDPIN=19

; Platooning
;    -D INPUT_PLATOONING
    -D       GAMETRAK1_RPIN=33  ; wire length Pin Gametrak 1
    -D     GAMETRAK1_PHIPIN=35  ; horizontal angle Pin Gametrak 1
    -D   GAMETRAK1_THETAPIN=32  ; vertical angle Pin Gametrak 1
    -D   GAMETRAK1_PHI_REV=1    ; Phi is inverted
    -D GAMETRAK1_THETA_REV=0    ; Theta is inverted
;    -D     GAMETRAK1_VCCPIN=25  ; Pin used to supply Power
;    -D     GAMETRAK1_GNDPIN=26  ; Pin used as GND

; ESPnow
;    -D INPUT_ESPNOW
;    -D OUTPUT_ESPNOW
;    -D ESPNOW_PREFIX=\"WBOARD\"  ; ESPNOW "Channel" encoded in SSID

; Serial Output
    -D OUTPUT_PROTOCOL_UART

; Debug
;    -D DEBUG_CONSOLE
;    -D DEBUG_OLED
;    -D DEBUG_PLOTTER
    -D WIFI
;    -D INPUT_TESTRUN
;    -D DEBUG_PROTOCOL_OUTGOING_MARKUP ; Write all outgoing Messages to debug com in human readable form
;    -D DEBUG_PROTOCOL_PASSTHROUGH     ; Connect motor com and debug com, disable usual machine protocol messages. useful when using ascii protocol manually
;    -D DEBUG_PROTOCOL_MEASUREMENTS    ; Write measured values to debug com


[env:nodemcu-32s_ESPSLAVE]
; 2018-11-12/phail: Tested, this is running on the board
board = nodemcu-32s
platform = espressif32
framework = arduino
lib_deps = U8g2, I2Cdevlib-MPU6050
board_build.partitions = min_spiffs.csv
monitor_speed = 115200
;upload_port = 192.168.4.1
build_flags =
    -I include
    -I src/hoverboardAPI/src
    -I src/hoverboardAPI/src/hbprotocol

; Serial Ports
    -D NUM_COM=3                ; total number of COM Ports
    -D DEBUG_COM=0              ; debug output
    -D UART_BAUD0=115200        ; Baudrate UART0
    -D        SERIAL0_RXPIN=03  ; receive Pin UART0
    -D        SERIAL0_TXPIN=01  ; transmit Pin UART0
    -D UART_BAUD1=9600          ; Baudrate UART1
    -D        SERIAL1_RXPIN=15  ; receive Pin UART1
    -D        SERIAL1_TXPIN=02  ; transmit Pin UART1
    -D MOTOR_COM=2              ; motor control output
    -D UART_BAUD2=19200         ; Baudrate UART2
    -D        SERIAL2_RXPIN=16  ; receive Pin UART2
    -D        SERIAL2_TXPIN=17  ; transmit Pin UART2

; Nunchuk
;    -D INPUT_NUNCHUK
;    -D      NUNCHUK_VCCPIN=18
;    -D      NUNCHUK_GNDPIN=19

; Platooning
;    -D INPUT_PLATOONING
;    -D       GAMETRAK1_RPIN=33  ; wire length Pin Gametrak 1
;    -D     GAMETRAK1_PHIPIN=35  ; horizontal angle Pin Gametrak 1
;    -D   GAMETRAK1_THETAPIN=32  ; vertical angle Pin Gametrak 1
;    -D   GAMETRAK1_PHI_REV=1    ; Phi is inverted
;    -D GAMETRAK1_THETA_REV=0    ; Theta is inverted
;    -D     GAMETRAK1_VCCPIN=25  ; Pin used to supply Power
;    -D     GAMETRAK1_GNDPIN=26  ; Pin used as GND

; ESPnow
    -D INPUT_ESPNOW
;    -D OUTPUT_ESPNOW
    -D ESPNOW_PREFIX=\"PADDELEC\" ; ESPNOW "Channel" encoded in SSID
;      #define ESPNOW_PEERMAC {0xB4, 0xE6, 0x2D, 0xB2, 0x79, 0x3D} // Paddel TTGO

; Serial Output
    -D OUTPUT_PROTOCOL_UART

; Debug
;    -D DEBUG_CONSOLE
;    -D DEBUG_OLED
;    -D DEBUG_PLOTTER
;    -D WIFI
;    -D INPUT_TESTRUN
;    -D DEBUG_PROTOCOL_OUTGOING_MARKUP ; Write all outgoing Messages to debug com in human readable form
;    -D DEBUG_PROTOCOL_PASSTHROUGH     ; Connect motor com and debug com, disable usual machine protocol messages. useful when using ascii protocol manually
;    -D DEBUG_PROTOCOL_MEASUREMENTS    ; Write measured values to debug com


[env:nodemcu-32s_ESPPROTOCOL]
; 2018-11-12/phail: Tested, this is running on the board
board = nodemcu-32s
platform = espressif32
framework = arduino
lib_deps = U8g2, I2Cdevlib-MPU6050
board_build.partitions = min_spiffs.csv
monitor_speed = 115200
;upload_port = 192.168.4.1
build_flags =
    -I include
    -I src/hoverboardAPI/src
    -I src/hoverboardAPI/src/hbprotocol

; Serial Ports
    -D NUM_COM=3                ; total number of COM Ports
    -D DEBUG_COM=0              ; debug output
    -D UART_BAUD0=115200        ; Baudrate UART0
    -D        SERIAL0_RXPIN=03  ; receive Pin UART0
    -D        SERIAL0_TXPIN=01  ; transmit Pin UART0
    -D UART_BAUD1=9600          ; Baudrate UART1
    -D        SERIAL1_RXPIN=15  ; receive Pin UART1
    -D        SERIAL1_TXPIN=02  ; transmit Pin UART1
    -D MOTOR_COM=2              ; motor control output
    -D UART_BAUD2=19200         ; Baudrate UART2
    -D        SERIAL2_RXPIN=16  ; receive Pin UART2
    -D        SERIAL2_TXPIN=17  ; transmit Pin UART2

; Nunchuk
;    -D INPUT_NUNCHUK
;    -D      NUNCHUK_VCCPIN=18
;    -D      NUNCHUK_GNDPIN=19
; Platooning
;    -D INPUT_PLATOONING
;    -D       GAMETRAK1_RPIN=33  ; wire length Pin Gametrak 1
;    -D     GAMETRAK1_PHIPIN=35  ; horizontal angle Pin Gametrak 1
;    -D   GAMETRAK1_THETAPIN=32  ; vertical angle Pin Gametrak 1
;    -D   GAMETRAK1_PHI_REV=1    ; Phi is inverted
;    -D GAMETRAK1_THETA_REV=0    ; Theta is inverted

; ESPnow
    -D OUTPUT_ESPNOW
    -D ESPNOW_PREFIX=\"PADDELEC\" ; ESPNOW "Channel" encoded in SSID
    -D ESPNOW_PEERMAC=0xB4,0xE6,0x2D,0xB2,0x79,0x3D ; Paddel TTGO
;    -D INPUT_ESPNOW

; Serial Output
;    -D OUTPUT_PROTOCOL_UART

; Debug
;    -D DEBUG_CONSOLE
;    -D DEBUG_OLED
;    -D DEBUG_PLOTTER
;    -D WIFI
    -D INPUT_TESTRUN
;    -D DEBUG_PROTOCOL_OUTGOING_MARKUP ; Write all outgoing Messages to debug com in human readable form
;    -D DEBUG_PROTOCOL_PASSTHROUGH     ; Connect motor com and debug com, disable usual machine protocol messages. useful when using ascii protocol manually
;    -D DEBUG_PROTOCOL_MEASUREMENTS    ; Write measured values to debug com



[env:featheresp32_relay]
; Pinout: https://learn.adafruit.com/adafruit-huzzah32-esp32-feather/pinouts
board = featheresp32
platform = espressif32
framework = arduino
lib_deps = U8g2, I2Cdevlib-MPU6050
board_build.partitions = min_spiffs.csv
monitor_speed = 115200
upload_port = /dev/ttyUSB0
build_flags =
    -I include
    -I src/hoverboardAPI/src
    -I src/hoverboardAPI/src/hbprotocol

; Serial Ports
    -D NUM_COM=3                ; total number of COM Ports
    -D DEBUG_COM=0              ; debug output
    -D UART_BAUD0=115200        ; Baudrate UART0
    -D        SERIAL0_RXPIN=03  ; receive Pin UART0
    -D        SERIAL0_TXPIN=01  ; transmit Pin UART0
    -D UART_BAUD1=9600          ; Baudrate UART1
    -D        SERIAL1_RXPIN=15  ; receive Pin UART1
    -D        SERIAL1_TXPIN=02  ; transmit Pin UART1
    -D MOTOR_COM=2              ; motor control output
    -D UART_BAUD2=115200        ; Baudrate UART2
    -D        SERIAL2_RXPIN=16  ; receive Pin UART2
    -D        SERIAL2_TXPIN=17  ; transmit Pin UART2

    ; Nunchuk
;    -D INPUT_NUNCHUK
;    -D      NUNCHUK_VCCPIN=18
    -D      NUNCHUK_GNDPIN=26

; Platooning
;    -D INPUT_PLATOONING
    -D       GAMETRAK1_RPIN=33  ; wire length Pin Gametrak 1
    -D     GAMETRAK1_PHIPIN=32   ; horizontal angle Pin
    -D   GAMETRAK1_THETAPIN=13   ; vertical angle Pin
    -D   GAMETRAK1_PHI_REV=1     ; Phi is inverted
    -D GAMETRAK1_THETA_REV=0     ; Theta is inverted
    -D     GAMETRAK2_PHIPIN=34   ; horizontal angle Pin
    -D       GAMETRAK2_RPIN=39   ; wire length Pin
    -D   GAMETRAK2_THETAPIN=36   ; vertical angle Pin - PIN13 is ADC2, not functional with wifi
    -D   GAMETRAK2_PHI_REV=1     ; Phi is inverted
    -D GAMETRAK2_THETA_REV=0     ; Theta is inverted

; ESPnow
    -D INPUT_ESPNOW
;    -D OUTPUT_ESPNOW
    -D ESPNOW_PREFIX=\"FEATHER\"  ; ESPNOW "Channel" encoded in SSID
;    -D ESPNOW_PEERMAC=0x30,0xAE,0xA4,0x26,0x6A,0xD4 ; feather esp remote
    -D ESPNOW_PEERMAC=0x30,0xAE,0xA4,0xE0,0x34,0x70 ; odroid phail

; UDP
;    -D INPUT_UDP
;    -D OUTPUT_UDP

; Serial Output
    -D OUTPUT_PROTOCOL_UART

; Debug
    -D DEBUG_CONSOLE
;    -D DEBUG_PLOTTER
;    -D debugESPNOW
;    -D WIFI
;    -D INPUT_TESTRUN
;    -D DEBUG_PROTOCOL_OUTGOING_MARKUP ; Write all outgoing Messages to debug com in human readable form
;    -D DEBUG_PROTOCOL_PASSTHROUGH     ; Connect motor com and debug com, disable usual machine protocol messages. useful when using ascii protocol manually
;    -D DEBUG_PROTOCOL_MEASUREMENTS    ; Write measured values to debug com



[env:nodemcu-woodenboard]
board = nodemcu-32s
platform = espressif32
framework = arduino
lib_deps = U8g2, I2Cdevlib-MPU6050
board_build.partitions = min_spiffs.csv
monitor_speed = 115200
upload_port = /dev/ttyUSB0
build_flags =
    -I include
    -I src/hoverboardAPI/src
    -I src/hoverboardAPI/src/hbprotocol

; Serial Ports
    -D NUM_COM=3                ; total number of COM Ports
    -D DEBUG_COM=0              ; debug output
    -D UART_BAUD0=115200        ; Baudrate UART0
    -D        SERIAL0_RXPIN=03  ; receive Pin UART0
    -D        SERIAL0_TXPIN=01  ; transmit Pin UART0
    -D UART_BAUD1=9600          ; Baudrate UART1
    -D        SERIAL1_RXPIN=15  ; receive Pin UART1
    -D        SERIAL1_TXPIN=02  ; transmit Pin UART1
    -D MOTOR_COM=2              ; motor control output
    -D UART_BAUD2=115200        ; Baudrate UART2
    -D        SERIAL2_RXPIN=16  ; receive Pin UART2
    -D        SERIAL2_TXPIN=17  ; transmit Pin UART2

; Nunchuk
;    -D INPUT_NUNCHUK
    -D      NUNCHUK_VCCPIN=18
    -D      NUNCHUK_GNDPIN=19

; Platooning
;    -D INPUT_PLATOONING
;    -D       GAMETRAK1_RPIN=33  ; wire length Pin Gametrak 1      -      white  - Pin 3
;    -D     GAMETRAK1_PHIPIN=35  ; horizontal angle Pin Gametrak 1 - blue/yellow - Pin 2
;    -D   GAMETRAK1_THETAPIN=32  ; vertical angle Pin Gametrak 1   - red/orange  - Pin 4
;    -D   GAMETRAK1_PHI_REV=1    ; Phi is inverted
;    -D GAMETRAK1_THETA_REV=0    ; Theta is inverted
;    -D     GAMETRAK1_VCCPIN=25  ; Pin used to supply Power        - black/brown - Pin 5
;    -D     GAMETRAK1_GNDPIN=26  ; Pin used as GND                 -       green - Pin 1

; ESPnow
    -D INPUT_ESPNOW
;    -D OUTPUT_ESPNOW
    -D ESPNOW_PREFIX=\"WBOARD\"  ; ESPNOW "Channel" encoded in SSID
;    -D ESPNOW_PEERMAC=0x30,0xAE,0xA4,0x26,0x6A,0xD4 ; feather esp remote
;    -D ESPNOW_PEERMAC=0xB4,0xE6,0x2D,0xD4,0x29,0xD9 ; odroid Nico
    -D ESPNOW_PEERMAC=0x30,0xAE,0xA4,0xE0,0x34,0x70 ; odroid phail



; Serial Output
    -D OUTPUT_PROTOCOL_UART

; Debug
    -D DEBUG_CONSOLE
;    -D DEBUG_PLOTTER
;    -D WIFI
;    -D INPUT_TESTRUN
    -D DEBUG_PROTOCOL_OUTGOING_MARKUP ; Write all outgoing Messages to debug com in human readable form
;    -D DEBUG_PROTOCOL_PASSTHROUGH     ; Connect motor com and debug com, disable usual machine protocol messages. useful when using ascii protocol manually
;    -D DEBUG_PROTOCOL_MEASUREMENTS    ; Write measured values to debug com

[env:nodemcu-testrun]
board = nodemcu-32s
platform = espressif32
framework = arduino
lib_deps = U8g2, I2Cdevlib-MPU6050
board_build.partitions = min_spiffs.csv
monitor_speed = 115200
upload_port = /dev/ttyUSB0
build_flags =
    -I include
    -I src/hoverboardAPI/src
    -I src/hoverboardAPI/src/hbprotocol

; Serial Ports
    -D NUM_COM=3                ; total number of COM Ports
    -D DEBUG_COM=0              ; debug output
    -D UART_BAUD0=115200        ; Baudrate UART0
    -D        SERIAL0_RXPIN=03  ; receive Pin UART0
    -D        SERIAL0_TXPIN=01  ; transmit Pin UART0
    -D UART_BAUD1=9600          ; Baudrate UART1
    -D        SERIAL1_RXPIN=15  ; receive Pin UART1
    -D        SERIAL1_TXPIN=02  ; transmit Pin UART1
    -D MOTOR_COM=2              ; motor control output
    -D UART_BAUD2=115200        ; Baudrate UART2
    -D        SERIAL2_RXPIN=16  ; receive Pin UART2
    -D        SERIAL2_TXPIN=17  ; transmit Pin UART2

; Nunchuk
;    -D INPUT_NUNCHUK
    -D      NUNCHUK_VCCPIN=18
    -D      NUNCHUK_GNDPIN=19

; Platooning
;    -D INPUT_PLATOONING
;    -D       GAMETRAK1_RPIN=33  ; wire length Pin Gametrak 1      -      white  - Pin 3
;    -D     GAMETRAK1_PHIPIN=35  ; horizontal angle Pin Gametrak 1 - blue/yellow - Pin 2
;    -D   GAMETRAK1_THETAPIN=32  ; vertical angle Pin Gametrak 1   - red/orange  - Pin 4
;    -D   GAMETRAK1_PHI_REV=1    ; Phi is inverted
;    -D GAMETRAK1_THETA_REV=0    ; Theta is inverted
;    -D     GAMETRAK1_VCCPIN=25  ; Pin used to supply Power        - black/brown - Pin 5
;    -D     GAMETRAK1_GNDPIN=26  ; Pin used as GND                 -       green - Pin 1

; ESPnow
;    -D INPUT_ESPNOW
;    -D OUTPUT_ESPNOW
    -D ESPNOW_PREFIX=\"WBOARD\"  ; ESPNOW "Channel" encoded in SSID

; Serial Output
    -D OUTPUT_PROTOCOL_UART

; Debug
    -D DEBUG_CONSOLE
;    -D DEBUG_PLOTTER
;    -D WIFI
    -D INPUT_TESTRUN
;    -D DEBUG_PROTOCOL_OUTGOING_MARKUP ; Write all outgoing Messages to debug com in human readable form
;    -D DEBUG_PROTOCOL_PASSTHROUGH     ; Connect motor com and debug com, disable usual machine protocol messages. useful when using ascii protocol manually
;    -D DEBUG_PROTOCOL_MEASUREMENTS    ; Write measured values to debug com

[env:featheresp32_remote]
; Pinout: https://learn.adafruit.com/adafruit-huzzah32-esp32-feather/pinouts
board = featheresp32
platform = espressif32
framework = arduino
lib_deps = U8g2, I2Cdevlib-MPU6050
board_build.partitions = min_spiffs.csv
monitor_speed = 115200
upload_port = /dev/ttyUSB0
build_flags =
    -I include
    -I src/hoverboardAPI/src
    -I src/hoverboardAPI/src/hbprotocol
; Serial Ports
    -D NUM_COM=3                ; total number of COM Ports
    -D DEBUG_COM=0              ; debug output
    -D UART_BAUD0=115200        ; Baudrate UART0
    -D        SERIAL0_RXPIN=03  ; receive Pin UART0
    -D        SERIAL0_TXPIN=01  ; transmit Pin UART0
    -D UART_BAUD1=9600          ; Baudrate UART1
    -D        SERIAL1_RXPIN=15  ; receive Pin UART1
    -D        SERIAL1_TXPIN=02  ; transmit Pin UART1
    -D MOTOR_COM=2              ; motor control output
    -D UART_BAUD2=19200         ; Baudrate UART2
    -D        SERIAL2_RXPIN=16  ; receive Pin UART2
    -D        SERIAL2_TXPIN=17  ; transmit Pin UART2

; Nunchuk
    -D INPUT_NUNCHUK
;    -D      NUNCHUK_VCCPIN=18
;    -D      NUNCHUK_GNDPIN=26

; Platooning
;    -D INPUT_PLATOONING
;    -D       GAMETRAK1_RPIN=33  ; wire length Pin Gametrak 1      -      white  - Pin 3
;    -D     GAMETRAK1_PHIPIN=35  ; horizontal angle Pin Gametrak 1 - blue/yellow - Pin 2
;    -D   GAMETRAK1_THETAPIN=32  ; vertical angle Pin Gametrak 1   - red/orange  - Pin 4
;    -D   GAMETRAK1_PHI_REV=1    ; Phi is inverted
;    -D GAMETRAK1_THETA_REV=0    ; Theta is inverted
;    -D     GAMETRAK1_VCCPIN=25  ; Pin used to supply Power        - black/brown - Pin 5
;    -D     GAMETRAK1_GNDPIN=26  ; Pin used as GND                 -       green - Pin 1

; ESPnow
;    -D INPUT_ESPNOW
    -D OUTPUT_ESPNOW
    -D ESPNOW_PREFIX=\"FEATHER\" ; ESPNOW "Channel" encoded in SSID
;    -D ESPNOW_PEERMAC=0x30,0xAE,0xA4,0x26,0x26,0x14 ; feather board with OLED
    -D ESPNOW_PEERMAC=0x24,0x0A,0xC4,0xAF,0xC9,0xE0 ; Woodeboard


; Serial Output
;    -D OUTPUT_PROTOCOL_UART

; Debug
;    -D DEBUG_CONSOLE
;    -D DEBUG_PLOTTER
;    -D WIFI
;    -D INPUT_TESTRUN
;    -D DEBUG_PROTOCOL_OUTGOING_MARKUP ; Write all outgoing Messages to debug com in human readable form
;    -D DEBUG_PROTOCOL_PASSTHROUGH     ; Connect motor com and debug com, disable usual machine protocol messages. useful when using ascii protocol manually
    -D DEBUG_PROTOCOL_MEASUREMENTS    ; Write measured values to debug com